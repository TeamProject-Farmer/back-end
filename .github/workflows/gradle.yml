# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
  
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
    - name: Build and Test
      run: ./gradlew build test
        
    - name: Set JWT YML
      run: |
        mkdir -p src/main/resources
        echo "${{secrets.APPLICATION_JWT_YML}}" | base64 --decode > src/main/resources/application-jwt.yml
        find src

    - name: Set OAUTH YML
      run: |
        mkdir -p src/main/resources
        echo "${{secrets.APPLICATION_OATUH_YML}}" | base64 --decode > src/main/resources/application-oauth.yml
        find src    
        
    # build         
    - name: Make Directory for deliver
      run: mkdir deploy
      
    - name: Copy jar
      run: cp ./build/libs/*.jar ./deploy/
      
    - name: Copy appspec
      run: cp appspec.yml ./deploy/

    - name: Make zip file
      run: zip -r -qq -j ./back-end-build.zip ./deploy

    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./back-end-build.zip s3://farmer-project-bucket/

    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment 
            --application-name farmer-cicd 
            --deployment-group-name farmer-project-cicd 
            --file-exists-behavior OVERWRITE         
            --s3-location bucket=farmer-project-bucket,bundleType=zip,key=back-end-build.zip 
            
    
      
